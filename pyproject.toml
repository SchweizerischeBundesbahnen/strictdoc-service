[project]
name = "strictdoc-service"
version = "0.0.0"  # the version is controlled by the pipeline
description = "Service for StrictDoc requirements management and documentation tool"
authors = [
    {name = "SBB Polarion Team", email = "polarion-opensource@sbb.ch"},
]
license = {text = "Apache License 2.0"}
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "strictdoc==0.12.0",
    "fastapi==0.118.2",
    "uvicorn==0.37.0",
    "pathvalidate==3.3.1",
    # pinning version to avoid security issues
    "urllib3==2.5.0",
]

[dependency-groups]
dev = [
    "pre-commit==4.3.0",
    "ruff==0.14.0",
    "mypy==1.18.2",
]
test = [
    "tox==4.30.3",
    # for debug source code for pytest --> see tox.ini section [testenv]
    "docker==7.1.0",
    "pytest==8.4.2",
    "pytest-mock==3.15.1",
    "pytest-asyncio==1.2.0",
    "httpx==0.28.1",
    "coverage==7.10.7",
]

[tool.uv]
# Set to false because this project is an application, not a library
package = false

[tool.ruff]
line-length = 240
fix = true
show-fixes = true
exclude = [
    "tests/*"  # Exclude all test files from linting
]

[tool.ruff.lint]
extend-select = [
    # --- Recommended ---
    "E", "W", # pycodestyle errors and warnings
    "F",      # Pyflakes
    "I",      # isort
    "C4",     # flake8-comprehensions
    "C90",    # mccabe
    "B",      # flake8-bugbear
    "UP",     # pyupgrade
    "S",      # flake8-bandit
    "PL",     # Pylint
    "PTH",    # flake8-pathlib
    "TCH",    # type-checking imports
    "SIM",    # flake8-simplify
    "T20",    # flake8-print
    "ERA",    # eradicate
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101", # No assert rule (bandit)
    "PLR2004", # No magic values (pylint)
    "F405", # undefined-local-with-import-star-usage (pyflakes)
    "F403", # No import * (pyflakes)
]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint.pylint]
max-args = 7

[tool.mypy]
explicit_package_bases = true
disallow_untyped_defs = true
exclude = "tests/.*"
install_types = true
non_interactive = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
